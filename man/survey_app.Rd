% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survey_app.R
\name{survey_app}
\alias{survey_app}
\title{Launch data entry app}
\usage{
survey_app(
  observers,
  platforms,
  optics,
  landmarks,
  cues,
  species,
  behaviours,
  scan_target = 15,
  gps_interval = 10,
  data_width = 20,
  scroll_height = 475,
  button_size = 200,
  button_padding = 30,
  keypad_size = 250,
  keypad_padding = 20,
  tab_size = 150,
  tab_width = 150,
  comment_1 = "Photo-ID acquired.",
  comment_2 = "Memorable sighting!",
  comment_3 = "Conditions changed dramatically during scan.",
  comment_4 = "Scan cut short early.",
  comment_5 = "Severe revision needed -- fix manually later!",
  comment_6 = "App crashed -- trying again."
)
}
\arguments{
\item{observers}{A character vector of observer names, initials, or codes.}

\item{platforms}{A character vector of platform names or sampling locations.}

\item{optics}{A character vector of optics used to detect wildlife (e.g., \code{"Binocs"} or \code{"Naked eye"}).
\strong{Option handling:} If this isn't relevant to your study, provide a single value, e.g., 'eyes'.
If you want to make sure that this value is always specified with each sighting,
make the first value \code{"N/A"}. When you do this, you will not be allowed to log a
new sighting until a value \emph{other than} \code{"N/A"} is selected.}

\item{landmarks}{A character vector of landmarks that a detection can be in line with.
This is useful in stationary surveys, to keep track of multiple sightings at once,
and to sanity-check bearing angles during analysis. See \emph{option handling} above.}

\item{cues}{A character vector of detection cues that triggered the sighting.
See \emph{option handling} above.}

\item{species}{A named list of character vectors, each specifying species options for
a single type or category of species. For example, in a marine mammal survey, you may have
two main types of detection: marine mammals or vessels. You would then have a \code{species} input like so:
\verb{list('MarMam' = c('species1', 'species2', 'etc'), 'Vessel' = c('type1', type2', 'etc')}.}

\item{behaviours}{A named list of character vectors, each specifying the behavior options
for each type/category in your \code{species} list. This list needs to be the same
length as the \code{species} list.}

\item{scan_target}{Beginning of default inputs: target duration of systematic scans,
with a default of 15 minutes.
When a scan is started, a timer begins. When the \code{scan_target} duration is exceeded,
a sound will indicate that the observer may end the scan. If you do not want to use
this feature, set to \code{Inf}.}

\item{gps_interval}{Interval between GPS position updates, in seconds (default = 10 sec).
This feature is only available for devices with GPS enabled (e.g., tablets and the newest laptops).
If the device you are using does not support GPS, position updates will be turned off.
This feature is in \emph{beta} -- not yet guaranteed to work.}

\item{data_width}{The number of data fields expected in your survey data.
The default is 20, meaning total \code{.csv} width will be 22 columns
(timestamp and event code account for the other two columns), which will work
for the packaged version of this app. We included this as an input in the event
that you wish to download and customize the function code; this input makes it easier
to adjust the width of your survey data files.}

\item{scroll_height}{This and the next several inputs relate to optimizing display
on your specific device. This input defines how 'tall' a scroll box should be,
in pixels. Smaller values will work for smaller screens or screens with lower resolution.}

\item{button_size}{Percentage by which to scale font size of buttons in the app.
Larger values create more visible button text.}

\item{button_padding}{The margin for buttons, in pixels. Larger values make the buttons larger.}

\item{keypad_size}{Like \code{button_size} above, the percentage by which to scale the numbers on the app's
number keypad.}

\item{keypad_padding}{Like \code{button_padding} above, this lets you adjust
the size of the number keypad buttons.}

\item{tab_size}{The percentage by which to scale the font size of the tab titles.}

\item{tab_width}{The width of tabs, in pixels. If the size or resolution of screen causes the tabset
to wrap onto two lines, you can prevent that by adjusting this value down.}

\item{comment_1}{This and the next several inputs allow you to define 'canned' comments
that can be efficiently logged on the "Comments" tab using a single touch of a button.
This feature can be useful if you regularly log the same type of comment throughout the day
during surveys. These canned comments will appear as buttons in the order you specify here.
Note that the comment text cannot accepts commas; any commas you enter will be removed
before storing the comment in the data file.}

\item{comment_2}{Second canned comment.}

\item{comment_3}{Third canned comment.}

\item{comment_4}{Fourth canned comment.}

\item{comment_5}{Fifth canned comment.}

\item{comment_6}{Sixth canned comment.}
}
\value{
This function will launch a \code{Shiny} app.

The first time you run the app,
a folder named \code{"data"} will be created within your working directory.
The app stores data in \code{.csv} files within that folder, one \code{.csv} for each
date (format: \code{yyyy-mm-dd.csv}). The first time the app is launched on a given date,
that data file will be created. In subsequent launches on the same date, the pre-existing file
will be appended with new data.

Rows of data are added to this file as you work within the app.
You can close the app at any time without affecting your data file.
To close the app, simply 'X' out of the app window. You may also need to
press the "Stop" sign in the \code{R}/\code{RStudio} GUI.

The app logs 6 types of data, described in detail below:
\itemize{
\item \strong{Effort updates}, with the following data fields:
\enumerate{
\item System timestamp (\verb{yyyy-mm-dd hh:mm:ss})
\item Event code (\code{EFF})
\item Effort status (1 = On systematic effort; 2 = Off systematic effort)
\item Observer on data entry duty / primary observer
\item Left observer, if any
\item Right observer, if any
\item Independent observer, if any
\item Research platform / sampling location
}
\item \strong{Condition updates}:
\enumerate{
\item System timestamp (\verb{yyyy-mm-dd hh:mm:ss})
\item Event code (\code{SEA})
\item Left edge of condition zone (degrees)
\item Right edge of condition zone (degrees)
\item Close/near edge of condition zone (estimated km)
\item Far/distance edge of condition zone (estimated km)
\item Beaufort sea state
\item Visibility (km)
\item Precipitation status
\item Fog status
\item Haze status
\item Horizon smear status (distortion caused by radiant heat)
\item Glare status
\item Left edge of glare, if any (degrees)
\item Right edge of glare, if any (degrees)
}
\item \strong{New sightings}:
\enumerate{
\item System timestamp (\verb{yyyy-mm-dd hh:mm:ss})
\item Event code (\code{SIT})
\item Unique sighting number (based on all sightings within data files within the \code{"data"} folder).
\item Bearing
\item Reticle reading
\item Optical instrument used to measure reticle
\item Estimated distane (km)
\item Landmark in line with the sighting
\item Detection cue
\item Maximum estimate of group size
\item Minimum estimate of group size
\item Best estimate of group size
\item Species type/category
\item Species name
\item Primary behaviour
\item Secondary behaviour
\item Tertiary behaviour
\item Direction of movement
\item Threat interaction? (TRUE or FALSE)
\item Number of calves in group
\item Number of males in group
\item Acoustic status
}
\item \strong{Sighting updates}:
\enumerate{
\item System timestamp (\verb{yyyy-mm-dd hh:mm:ss})
\item Event code (\code{UPD})
\item Sighting number being updated
\item New bearing
\item New reticle
\item How reticle was measured (optics)
\item New estimated distance
\item Observer contributing new estimate
\item Whether group size has changed or is just being estimated again
\item Maximum group size estimate
\item Minimum group size estimate
\item Best group size estimate
\item Whether or not this is a mixed-species group
\item Species name of second species in group
\item Percent of group represented by this second species
\item Species name of third species in group
\item Percent of group represented by this second species (ensure that this plus the percentage for species 2 does not exceed 99)
\item Updated primary behaviour
\item Updated secondary behaviour
\item Updated tertiary behaviour
\item Updated threat interaction
\item Updated acoustic status
}
\item \strong{Comments}:
\enumerate{
\item System timestamp (\verb{yyyy-mm-dd hh:mm:ss})
\item Event code (\code{COM})
\item Sighting number associated with this sighting, if any
\item The comment
}
\item \strong{Position updates}:
\enumerate{
\item System timestamp (\verb{yyyy-mm-dd hh:mm:ss})
\item Event code (\code{*})
\item Latitude, decimal degrees
\item Longitude, decimal degrees
\item GPS time
}
}
}
\description{
This function launches a Shiny app designed to optimize data entry during wildlife surveys.
The app was designed with marine mammal surveys in mind, but should be generalizable for other contexts
and target species. The app should be useful for both stationary and transect-based surveys.
Layout has been optimized for touch screens.
}
\details{
Typical workflow:

\itemize{
\item Open an \code{R} script in your working directory and setup your \code{survey_app()} function call.
\item Run it to launch the app.
\item On the "Effort" tab, update observer positions and "Start scan".
\item On the "Conditions" tab, update sighting conditions. You will not be able to store
conditions until the boundaries of the conditions have been specified. This app
uses a concept of 'condition zones' to allow you to describe varying conditions in different
regions of your viewshed.
A condition zone is a portion of searchable area that has
left and right boundary edges (described using compass bearing) and
close and far boundary edges (described using an estimated distance).
You can store as many condition zones as you need in order to describe condition zones.
Subsequent processing functions will sort multiple condition zones from widest to narrowest,
which means that you can specify a broad condition zone (1 - 359 degrees, 0 km to 30 km away)
then specify narrow condition zones to describe small exceptions to the most prevalent conditions.
\item On the "Sightings" tab, enter detections while you search. You will not be able to store
a sighting unless all required fields at the top of page have been modified.
\item Use the "Update" tab to update or elaborate upon a sighitng you have already logged.
On this tab, you can update your position estimate, add additional group size estimates from other observers,
specify other species in the sighting if it is a mixed-species group, and update behaviors.
Note that this tab should \emph{not} be used to correct or fix erroneous data entries.
You can do that directly under the "Review" tab.
Also note that you will not be able to log an update until you select the sighting you are updating
from the table provided in the tab.
\item On the "Review" tab, check on the data you are entering.
Scroll down to see the most recent entries.
When you click on a row (or multiple rows), you will have the option to delete it
or to copy it. You can then click on another row and paste that row below it.
You can then click on individual fields and edit them directly.
Each time you make an edit, the data file will be updated. (So be careful!).
\item When you are ready to end the scan, go back to the "Effort" tab and end the scan.
\item When you are ready to close the app, just 'X' out of the app window.
}
}
\examples{
# Customize settings =======================================

observers <- c('Grace','Janie','Chenoah', 'Ben')

platforms <- c('Inside','Outside')

optics <- c('N/A','Big Eyes', 'Binocs', 'Scope', 'Naked Eye')

landmarks <- c('N/A','Gil Mtn', 'CMP peaks', 'Otter',
               'Twartz', 'Farrant', 'N Fin shore')

cues <- c('N/A','Blow','Vessel','Body','Fluke','Splash','Sound')

species <- list('MarMam' = c('Humpback', 'Fin', 'Dalls porpoise',
                             'Harbour seal', 'Stellars sea lion',
                             'Elephant seal', 'Killer whale'),
                'Vessel' = c('Large rec', 'Small rec', 'CFV', 'Sailing',
                             'Tug only', 'Tug+barge', 'Gitgaat',
                             'Research', 'Cruise', 'Tanker'))

behaviours <- list('MarMam' = c('Active', 'Sleep', 'Feeding',
                                'BNF', 'Milling', 'Robust', 'Fast travel',
                                'RE-TR'),
                    'Vessel' = c('Fast travel', 'Slow travel', 'Fishing',
                                 'With whales', 'Anchored'))

# Launch app =======================================

survey_app(observers,
           platforms,
           optics,
           landmarks,
           cues,
           species,
           behaviours)

}
